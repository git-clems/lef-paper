import numpy as np


NB_I = 5
NB_S = 10
NB_T = 10
I = range(NB_I)
T = range(NB_T)
S = range(NB_S)

prob = np.array ( [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1] )
b = np.array ( [6.97, 5.56, 5.32, 5.66, 6.18] )
E_max = np.array ( [45.0, 36.0, 28.8, 23.04, 18.43, 14.75, 11.8, 11.25, 11.25, 11.25] )
d = np.array ( [
	[77.09, 67.46, 67.74, 71.41, 73.17, 71.26, 67.69, 74.9, 71.02, 73.28],
	[74.28, 74.44, 71.94, 71.1, 75.75, 78.1, 70.71, 75.19, 71.26, 75.99],
	[71.48, 74.02, 71.33, 74.14, 76.33, 70.25, 68.25, 75.25, 78.37, 73.71],
	[68.15, 68.93, 77.06, 72.84, 71.6, 77.8, 75.58, 71.69, 70.39, 72.95],
	[71.94, 77.77, 77.52, 73.28, 75.29, 68.01, 73.3, 72.6, 68.93, 73.13],
	[77.37, 72.17, 68.09, 76.99, 77.59, 70.1, 68.31, 72.22, 73.65, 68.57],
	[72.12, 68.58, 77.88, 76.1, 70.66, 72.27, 74.64, 68.06, 71.1, 67.54],
	[70.01, 77.91, 70.32, 68.01, 68.97, 74.02, 74.12, 71.2, 78.25, 78.02],
	[73.5, 74.47, 68.8, 69.09, 70.21, 68.35, 75.18, 76.0, 75.15, 71.81],
	[71.88, 71.62, 67.71, 73.78, 68.43, 68.24, 77.26, 72.4, 68.33, 72.89],
] )
eC = np.array ( [
	[1.45, 1.09, 0.95, 1.27, 1.11, 1.21, 1.12, 0.98, 1.42, 1.41],
	[1.64, 1.05, 1.57, 1.18, 1.14, 1.15, 1.38, 1.29, 1.05, 0.92],
	[1.34, 1.44, 1.15, 0.96, 1.19, 1.33, 1.58, 1.51, 1.36, 1.4],
	[1.02, 1.64, 1.0, 0.94, 1.4, 1.23, 1.1, 1.36, 1.4, 1.24],
	[1.25, 1.64, 1.17, 0.94, 1.4, 1.37, 1.64, 1.2, 0.94, 1.04],
	[1.52, 1.5, 1.6, 1.28, 1.42, 1.33, 1.42, 1.06, 0.99, 1.34],
	[1.46, 1.11, 1.42, 1.17, 1.28, 1.59, 1.18, 1.14, 1.29, 0.99],
	[1.42, 1.45, 1.21, 1.27, 1.08, 1.07, 1.06, 0.98, 1.51, 1.49],
	[1.49, 1.44, 1.3, 0.99, 1.17, 1.18, 1.43, 1.63, 1.0, 1.37],
	[1.63, 1.1, 1.47, 1.18, 1.61, 0.98, 1.18, 1.05, 0.97, 1.47],
] )
eO = np.array ( [
	[-3.96, -0.74, 0.28, -5.37, -5.49, -1.47, 0.35, -4.21, -4.12, -3.79],
	[-5.0, -6.36, 0.09, -1.36, -1.1, -1.18, -4.06, -5.01, -2.54, -5.76],
	[-2.94, -2.97, 0.27, -2.59, -3.96, 0.4, -6.12, -1.73, 0.45, -3.79],
	[-1.55, -4.95, -4.93, -2.25, -2.24, -0.17, -5.98, -6.3, -0.84, -4.9],
	[-2.11, 0.32, -3.72, -2.81, -5.45, -5.66, -0.21, -2.81, -4.28, -3.52],
	[-2.29, -0.04, -2.85, -5.3, -3.31, -3.54, -4.29, -2.18, -4.96, -5.91],
	[-3.36, -0.2, -4.5, -4.81, -1.1, -3.33, -4.5, -2.09, -5.47, -4.85],
	[-1.7, -0.54, -5.85, -2.85, -5.87, 0.44, -4.68, -2.52, -0.76, -0.91],
	[0.47, -3.2, -3.67, -0.33, -3.34, -3.83, 0.01, -2.99, -3.32, -4.13],
	[-2.54, -2.08, -1.8, -2.42, -3.88, -3.81, -3.57, 0.23, 0.04, -0.45],
] )
pO = np.array ( [
	[113.34, 125.37, 113.25, 118.7, 126.14, 120.59, 110.54, 125.56, 126.26, 114.66],
	[114.55, 123.31, 123.06, 121.0, 114.7, 110.72, 115.06, 113.96, 121.89, 121.64],
	[124.23, 126.2, 112.8, 115.36, 115.85, 111.95, 120.13, 114.92, 115.86, 125.75],
	[113.62, 128.16, 111.1, 123.71, 125.19, 122.11, 112.02, 125.19, 125.92, 119.24],
	[110.69, 119.03, 114.2, 120.36, 123.41, 114.12, 110.63, 116.74, 111.98, 115.16],
	[122.33, 110.51, 126.07, 111.16, 118.9, 112.55, 120.99, 127.48, 115.1, 119.44],
	[126.53, 121.29, 115.85, 115.67, 125.07, 111.41, 114.31, 127.56, 126.35, 119.02],
	[110.99, 125.61, 112.17, 115.18, 124.67, 122.4, 114.56, 128.19, 110.7, 110.24],
	[124.64, 117.94, 127.15, 115.56, 114.71, 120.23, 111.5, 110.47, 116.44, 124.3],
	[116.4, 111.12, 123.04, 126.16, 110.25, 122.57, 111.12, 112.15, 113.3, 125.21],
] )
pC = np.array ( [
	[72.82, 75.28, 76.08, 76.24, 76.03, 77.78, 73.04, 74.3, 71.06, 74.34],
	[75.24, 76.63, 77.95, 78.18, 78.91, 76.65, 72.22, 72.44, 69.85, 75.51],
	[70.19, 71.65, 72.14, 69.83, 72.04, 77.14, 70.17, 79.83, 78.92, 78.48],
	[72.2, 78.84, 74.08, 79.38, 74.54, 78.3, 77.17, 72.06, 79.0, 71.49],
	[76.59, 69.63, 75.72, 73.56, 72.14, 78.9, 70.64, 73.07, 68.92, 72.99],
	[79.33, 70.3, 78.82, 71.18, 74.66, 69.64, 71.21, 74.26, 72.7, 76.68],
	[79.18, 78.91, 70.71, 78.14, 74.43, 75.8, 79.53, 72.06, 75.82, 78.76],
	[75.72, 74.51, 69.66, 72.16, 74.92, 71.87, 76.54, 75.22, 69.06, 75.29],
	[78.57, 72.23, 73.84, 74.32, 69.08, 78.49, 73.98, 76.32, 75.14, 73.43],
	[77.36, 71.74, 70.75, 74.82, 74.08, 76.81, 69.59, 78.58, 76.44, 70.15],
] )
sold_price = np.array ( [
	[31.41, 31.18, 39.05, 33.59, 39.65, 38.68, 31.86, 38.3, 30.37, 35.3],
	[37.41, 38.41, 38.63, 37.63, 36.49, 35.25, 33.57, 33.2, 31.71, 39.25],
	[30.97, 37.02, 39.6, 35.8, 39.24, 39.61, 34.47, 36.73, 32.48, 35.49],
	[31.97, 35.64, 30.52, 38.11, 33.56, 34.79, 34.6, 38.02, 30.56, 36.44],
	[38.08, 31.33, 35.3, 35.85, 33.47, 36.36, 38.91, 33.01, 37.15, 39.38],
	[38.0, 31.19, 36.12, 37.46, 34.37, 39.28, 38.53, 33.21, 37.08, 36.88],
	[36.3, 30.88, 31.53, 30.82, 37.28, 36.9, 30.35, 35.97, 33.86, 30.28],
	[39.96, 32.7, 38.47, 38.08, 39.42, 36.23, 32.78, 31.87, 35.52, 36.26],
	[37.67, 39.99, 37.65, 30.69, 36.22, 31.54, 35.33, 36.6, 30.55, 36.94],
	[33.65, 39.34, 37.79, 31.57, 36.0, 34.98, 38.66, 34.77, 30.3, 31.46],
] )
buy_price = np.array ( [
	[43.97, 43.65, 54.67, 47.03, 55.51, 54.15, 44.6, 53.62, 42.52, 49.42],
	[52.37, 53.77, 54.08, 52.68, 51.09, 49.35, 47.0, 46.48, 44.39, 54.95],
	[43.36, 51.83, 55.44, 50.12, 54.94, 55.45, 48.26, 51.42, 45.47, 49.69],
	[44.76, 49.9, 42.73, 53.35, 46.98, 48.71, 48.44, 53.23, 42.78, 51.02],
	[53.31, 43.86, 49.42, 50.19, 46.86, 50.9, 54.47, 46.21, 52.01, 55.13],
	[53.2, 43.67, 50.57, 52.44, 48.12, 54.99, 53.94, 46.49, 51.91, 51.63],
	[50.82, 43.23, 44.14, 43.15, 52.19, 51.66, 42.49, 50.36, 47.4, 42.39],
	[55.94, 45.78, 53.86, 53.31, 55.19, 50.72, 45.89, 44.62, 49.73, 50.76],
	[52.74, 55.99, 52.71, 42.97, 50.71, 44.16, 49.46, 51.24, 42.77, 51.72],
	[47.11, 55.08, 52.91, 44.2, 50.4, 48.97, 54.12, 48.68, 42.42, 44.04],
] )
